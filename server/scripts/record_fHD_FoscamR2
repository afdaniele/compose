#!/bin/bash
# recordCam.sh
# ------------
# This script saves the live video from the Foscam IP camera to a full-quality mp4 file.
# I chose to split the files every 15 minutes (900 seconds), to quickly find the time I need.
# Note: audio is not saved as my cameras don't have a microphone connected to them.
# -----------
# Author: @LucaTNT
# License: BSD

# Uncomment this line if you're having trouble with zero-sized files (tipically happens on low end cameras), thanks Eric! (https://lucatnt.com/2014/08/record-and-archive-video-from-ip-cameras/#comment-48019)
# killall -INT ffmpeg

# check whether the time is within the interval of interest 8AM-11PM.
timestamp="`date +%T`"
if [[ "$timestamp" < "08:00:00" || "$timestamp" > "23:00:00" ]]; then
    exit 0
fi

# The file name. I use the date to make finding files easier.
day="`date +%Y-%m-%d`"
name="`date +%Y-%m-%d_%H.%M`"

# Where the videos will be saved.
BASEpath='/mnt/data/duckietown-data'
RECpath=$BASEpath'/video/'$day
LOGpath=$BASEpath'/logs/'$day

# Create the REC folder if it does not exist.
if [[ ! -d "$RECpath" ]]; then
  mkdir -p "$RECpath"
fi

# Create the LOG folder if it does not exist.
if [[ ! -d "$LOGpath" ]]; then
  mkdir -p "$LOGpath"
fi

# Save the streams using ffmpeg at 25 fps, stopping the capture after 1800 seconds (30 minutes) + 10 seconds to overlap initial bad frames.
ffmpeg -i rtsp://duckietown-visitor:duckiet0wn@192.168.1.2:88/videoMain -r 25 -vcodec copy -an -t 1810 $RECpath/$name.mp4 </dev/null >/dev/null 2>$LOGpath/$name.log &
